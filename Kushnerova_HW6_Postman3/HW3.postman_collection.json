{
	"info": {
		"_postman_id": "237b9a9b-40f8-4baa-beb0-d704eb887c17",
		"name": "HW3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp = pm.response.json();\r",
							"pm.environment.set(\"token\", resp.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "matizka",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/login",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1) Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//2) Проверка структуры json в ответе.\r",
							"var schema = \r",
							"{\r",
							"    \"type\" : \"object\",\r",
							"    \"properties\" : {\r",
							"        \"person\" :\r",
							"             {\"type\": \"object\",\r",
							"            \"properties\":\r",
							"             {\r",
							"                 \"u_age\" : {\"type\":\"number\"},\r",
							"                 \"u_name\" :{\"type\" : \"array\",\r",
							"                        \"items\":\r",
							"                        [\r",
							"                            {\"type\" : \"string\"},\r",
							"                            {\"type\" : \"number\"},\r",
							"                            {\"type\" : \"number\"}\r",
							"                        ]\r",
							"                 },\r",
							"                 \"u_salary_1_5_year\" : {\"type\":\"number\"}\r",
							"             }\r",
							"             },\r",
							"        \"qa_salary_after_12_months\" : {\"type\" : \"number\"},\r",
							"        \"qa_salary_after_6_months\" : {\"type\" : \"number\"},\r",
							"        \"start_qa_salary\" : {\"type\" : \"number\"}\r",
							"        }\r",
							"};\r",
							"\r",
							"var resp = pm.response.json();\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(resp,schema,true,true)).to.be.true;\r",
							"});\r",
							"\r",
							"//3) В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"//1000\r",
							"pm.test(\"start_qa_salary\", function () {\r",
							"    pm.expect(resp.start_qa_salary).to.eql(resp.person.u_name[1]);  \r",
							"});\r",
							"//2000\r",
							"pm.test(\"resp.qa_salary_after_6_months\", function () {\r",
							"    pm.expect(resp.start_qa_salary*2).to.eql(resp.qa_salary_after_6_months);  \r",
							"});\r",
							"//2900\r",
							"pm.test(\"resp.qa_salary_after_12_months\", function () {\r",
							"    pm.expect(resp.start_qa_salary*2.9).to.eql(resp.qa_salary_after_12_months);  \r",
							"});\r",
							"//4000\r",
							"pm.test(\"resp.qa_salary_after_12_months\", function () {\r",
							"    pm.expect(resp.start_qa_salary*4).to.eql(resp.person.u_salary_1_5_year);  \r",
							"});\r",
							"//4) Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://162.55.220.72:5005/get_test_user\r",
							"//console.log(resp.person.u_salary_1_5_year)\r",
							"pm.environment.set(\"salary\", resp.person.u_salary_1_5_year);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\" : 20,\r\n    \"salary\" : 1000,\r\n    \"name\" : \"Alex\",\r\n    \"auth_token\" :\"{{token}}\"\r\n   } ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1) Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//2) Проверка структуры json в ответе.\r",
							"var schema = \r",
							"{\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"salary\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": \r",
							"      [\r",
							"        {\"type\": \"number\"},\r",
							"        {\"type\": \"string\"},\r",
							"        {\"type\": \"string\"}\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"}\r",
							"\r",
							"var resp = pm.response.json();\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(resp,schema,true,true)).to.be.true;\r",
							"});\r",
							"\r",
							"//3) В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"//console.log(resp.salary[0]) \r",
							"//console.log(resp.salary[1]) \r",
							"//console.log(resp.salary[2]) \r",
							"  pm.test(\"salary[1]\", function () {\r",
							"    pm.expect(+resp.salary[1]).to.eql(resp.salary[0]*2);\r",
							"});       \r",
							"     pm.test(\"salary[2]\", function () {\r",
							"    pm.expect(+resp.salary[2]).to.eql(resp.salary[0]*3);\r",
							"});                                                                       \r",
							"//4) проверить, что 2-й элемент массива salary больше 1-го и 0-го\r",
							"pm.test(\"salary[2]>salary[0]\", function () {\r",
							"     pm.expect(+resp.salary[2]).to.be.not.below(resp.salary[0]);\r",
							"});\r",
							"pm.test(\"salary[2]>salary[1]\", function () {\r",
							"     pm.expect(+resp.salary[2]).to.be.not.below(+resp.salary[1]);\r",
							"});\r",
							"//not.below=above=greaterThan "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "20",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Alex",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1) Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//2) Проверка структуры json в ответе.\r",
							"var schema = {\r",
							"     \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"    \"age\": \r",
							"    {\"type\": \"number\"},\r",
							"    \"daily_food\": \r",
							"    {\"type\": \"number\"},\r",
							"    \"daily_sleep\": \r",
							"    {\"type\": \"number\"},\r",
							"    \"name\": \r",
							"    {\"type\": \"string\"}\r",
							"    }\r",
							"};\r",
							"\r",
							"var resp = pm.response.json();\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(resp, schema,true,true)).to.be.true;\r",
							"});\r",
							"//3) В ответе указаны коэффициенты умножения weight, напишите тесты по проверке правильности результата перемножения на коэффициент.//\r",
							"\r",
							"var resp = pm.response.json();\r",
							"var req = request.data;\r",
							"pm.test(\"daily_food\", function () {\r",
							"    pm.expect(req.weight*0.012).to.eql(resp.daily_food);\r",
							"});\r",
							"pm.test(\"daily_sleep\", function () {\r",
							"    pm.expect(req.weight*2.5).to.eql(resp.daily_sleep);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "20",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "58",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Alex",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "5. get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1) Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//2) Проверка структуры json в ответе.\r",
							"var schema = \r",
							"{\r",
							"\"type\" : \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\"type\": \"string\"},\r",
							"    \"family\": {    \r",
							"        \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"children\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [{\"type\": \"string\"},\r",
							"                {\"type\": \"integer\"}]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [{\"type\": \"string\" },\r",
							"                {\"type\": \"integer\" }]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"u_salary_1_5_year\": {\"type\": \"integer\"}\r",
							"      }\r",
							"    },\r",
							"    \"name\" : {\"type\" : \"string\"},\r",
							"    \"salary\" : {\"type\" : \"integer\"}\r",
							"}\r",
							"}\r",
							"//3) Проверить что занчение поля name = значению переменной name из окружения\r",
							"var resp = pm.response.json();\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(resp, schema,true,true)).to.be.true;\r",
							"});\r",
							"\r",
							"//4) Проверить что занчение поля age в ответе соответсвует отправленному в запросе значению поля age \r",
							"var req = request.data;\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(resp.age).to.eql(req.age);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "20",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Alex",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "6. currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1) Можете взять любой объект из присланного списка, используйте js random.\r",
							"//В объекте возьмите Cur_ID и передать через окружение в следующий запрос."
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/currency",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "7. curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1) Статус код 200\r",
							"//2) Проверка структуры json в ответе.\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "2",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/curr_byn",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	]
}